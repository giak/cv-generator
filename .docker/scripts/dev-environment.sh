#!/bin/bash

# Script pour configurer un environnement de d√©veloppement local avec Docker
# Il configure tout ce dont vous avez besoin pour travailler sur le projet CV Generator

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}üìã CV Generator - Configuration de l'environnement de d√©veloppement${NC}"
echo "--------------------------------------------------------------"

# V√©rifier si Docker est install√©
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker n'est pas install√©. Veuillez l'installer avant de continuer.${NC}"
    echo "üëâ https://docs.docker.com/get-docker/"
    exit 1
fi

# V√©rifier si Docker Compose est install√©
if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose n'est pas install√©. Veuillez l'installer avant de continuer.${NC}"
    echo "üëâ https://docs.docker.com/compose/install/"
    exit 1
fi

# V√©rifier si git est install√©
if ! command -v git &> /dev/null; then
    echo -e "${RED}‚ùå Git n'est pas install√©. Veuillez l'installer avant de continuer.${NC}"
    exit 1
fi

# V√©rifier les permissions des scripts
echo -e "${BLUE}üîç V√©rification des permissions des scripts...${NC}"
chmod +x start.sh
chmod +x test-docker.sh
chmod +x docker-cleanup.sh
echo -e "${GREEN}‚úÖ Permissions des scripts mises √† jour${NC}"

# Copier le fichier .env.example en .env s'il n'existe pas d√©j√†
if [ ! -f .env ]; then
    echo -e "${BLUE}üìÑ Cr√©ation du fichier .env √† partir de .env.example...${NC}"
    cp .env.example .env
    echo -e "${GREEN}‚úÖ Fichier .env cr√©√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Le fichier .env existe d√©j√†, il n'a pas √©t√© modifi√©${NC}"
fi

# V√©rifier si les dossiers essentiels existent
echo -e "${BLUE}üîç V√©rification des dossiers essentiels...${NC}"
mkdir -p .github/workflows
mkdir -p kubernetes
mkdir -p docs/guides
echo -e "${GREEN}‚úÖ Dossiers essentiels cr√©√©s${NC}"

# Proposer de construire l'image Docker
echo -e "${BLUE}üèóÔ∏è Souhaitez-vous construire l'image Docker maintenant ? (y/n)${NC}"
read -p "" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${BLUE}üèóÔ∏è Construction de l'image Docker...${NC}"
    docker-compose build
    echo -e "${GREEN}‚úÖ Image Docker construite avec succ√®s${NC}"
fi

# Proposer d'ex√©cuter les tests
echo -e "${BLUE}üß™ Souhaitez-vous ex√©cuter les tests dans Docker maintenant ? (y/n)${NC}"
read -p "" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${BLUE}üß™ Ex√©cution des tests unitaires...${NC}"
    ./test-docker.sh unit
    echo -e "${GREEN}‚úÖ Tests ex√©cut√©s avec succ√®s${NC}"
fi

# Proposer de d√©marrer l'application en mode d√©veloppement
echo -e "${BLUE}üöÄ Souhaitez-vous d√©marrer l'application en mode d√©veloppement maintenant ? (y/n)${NC}"
read -p "" -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${BLUE}üöÄ D√©marrage de l'application en mode d√©veloppement...${NC}"
    ./start.sh development
else
    echo -e "${BLUE}‚ÑπÔ∏è Pour d√©marrer l'application en mode d√©veloppement plus tard, ex√©cutez :${NC}"
    echo -e "${YELLOW}   ./start.sh development${NC}"
    echo -e "${BLUE}‚ÑπÔ∏è Pour d√©marrer l'application en mode production, ex√©cutez :${NC}"
    echo -e "${YELLOW}   ./start.sh${NC}"
fi

echo -e "${GREEN}‚úÖ Configuration de l'environnement de d√©veloppement termin√©e !${NC}"
echo -e "${BLUE}‚ÑπÔ∏è Documentation Docker disponible dans README.docker.md${NC}"
echo -e "${BLUE}‚ÑπÔ∏è Guide de d√©ploiement Docker disponible dans docs/guides/docker-deployment.md${NC}"

echo -e "${YELLOW}=== Commandes npm disponibles ===${NC}"
echo -e "${YELLOW}pnpm docker:start${NC} - D√©marrer l'application en mode production"
echo -e "${YELLOW}pnpm docker:start:dev${NC} - D√©marrer l'application en mode d√©veloppement"
echo -e "${YELLOW}pnpm docker:test${NC} - Ex√©cuter les tests unitaires dans Docker"
echo -e "${YELLOW}pnpm docker:test:e2e${NC} - Ex√©cuter les tests end-to-end dans Docker"
echo -e "${YELLOW}pnpm docker:clean${NC} - Nettoyer les artefacts Docker inutilis√©s"

exit 0 