#!/bin/bash

# Script pour ex√©cuter les tests dans un environnement Docker
# Ce script isole l'environnement de test pour assurer des r√©sultats coh√©rents

# Couleurs pour les messages
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# V√©rifier si Docker est install√©
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker n'est pas install√©. Veuillez l'installer avant de continuer.${NC}"
    echo "üëâ https://docs.docker.com/get-docker/"
    exit 1
fi

# V√©rifier si Docker Compose est install√©
if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose n'est pas install√©. Veuillez l'installer avant de continuer.${NC}"
    echo "üëâ https://docs.docker.com/compose/install/"
    exit 1
fi

# D√©finir le type de test par d√©faut
TEST_TYPE=${1:-"unit"}
WATCH_MODE=${2:-"false"}

# Fonction pour afficher l'utilisation
usage() {
    echo -e "${BLUE}Usage: $0 [unit|e2e|all] [true|false]${NC}"
    echo -e "  - Premier argument: type de test (unit, e2e, ou all)"
    echo -e "  - Deuxi√®me argument: mode watch (true ou false, d√©faut: false)"
    echo -e "Exemples:"
    echo -e "  $0 unit         # Ex√©cuter les tests unitaires"
    echo -e "  $0 e2e          # Ex√©cuter les tests end-to-end"
    echo -e "  $0 all          # Ex√©cuter tous les tests"
    echo -e "  $0 unit true    # Ex√©cuter les tests unitaires en mode watch"
    exit 1
}

# V√©rifier les arguments
if [[ "$TEST_TYPE" != "unit" && "$TEST_TYPE" != "e2e" && "$TEST_TYPE" != "all" ]]; then
    echo -e "${RED}‚ùå Type de test invalide: $TEST_TYPE${NC}"
    usage
fi

if [[ "$WATCH_MODE" != "true" && "$WATCH_MODE" != "false" ]]; then
    echo -e "${RED}‚ùå Mode watch invalide: $WATCH_MODE${NC}"
    usage
fi

# Afficher le type de test
echo -e "${BLUE}üß™ Ex√©cution des tests ${YELLOW}$TEST_TYPE${BLUE} dans Docker${NC}"
if [[ "$WATCH_MODE" == "true" ]]; then
    echo -e "${BLUE}üîÑ Mode watch activ√©${NC}"
fi

# Cr√©er un conteneur temporaire pour ex√©cuter les tests
echo -e "${BLUE}üèóÔ∏è Cr√©ation d'un conteneur temporaire pour les tests...${NC}"

# Construire une image sp√©cifique pour les tests
DOCKER_BUILDKIT=1 docker build \
    --target=dependencies \
    -t cv-generator-test \
    -f Dockerfile .

# Commande pour ex√©cuter les tests
if [[ "$TEST_TYPE" == "unit" || "$TEST_TYPE" == "all" ]]; then
    echo -e "${BLUE}üß™ Ex√©cution des tests unitaires...${NC}"
    
    WATCH_FLAG=""
    if [[ "$WATCH_MODE" == "true" ]]; then
        WATCH_FLAG="--watch"
    fi
    
    docker run --rm -it \
        -v "$(pwd):/app" \
        -w /app \
        cv-generator-test \
        pnpm test $WATCH_FLAG
    
    UNIT_EXIT_CODE=$?
    
    if [[ $UNIT_EXIT_CODE -ne 0 ]]; then
        echo -e "${RED}‚ùå Les tests unitaires ont √©chou√© (code de sortie: $UNIT_EXIT_CODE)${NC}"
        if [[ "$TEST_TYPE" == "unit" ]]; then
            exit $UNIT_EXIT_CODE
        fi
    else
        echo -e "${GREEN}‚úÖ Tests unitaires r√©ussis${NC}"
    fi
fi

if [[ "$TEST_TYPE" == "e2e" || "$TEST_TYPE" == "all" ]]; then
    echo -e "${BLUE}üß™ Ex√©cution des tests end-to-end...${NC}"
    
    WATCH_FLAG=""
    if [[ "$WATCH_MODE" == "true" ]]; then
        WATCH_FLAG="--watch"
    fi
    
    docker run --rm -it \
        -v "$(pwd):/app" \
        -w /app \
        cv-generator-test \
        pnpm test:e2e $WATCH_FLAG
    
    E2E_EXIT_CODE=$?
    
    if [[ $E2E_EXIT_CODE -ne 0 ]]; then
        echo -e "${RED}‚ùå Les tests end-to-end ont √©chou√© (code de sortie: $E2E_EXIT_CODE)${NC}"
        exit $E2E_EXIT_CODE
    else
        echo -e "${GREEN}‚úÖ Tests end-to-end r√©ussis${NC}"
    fi
fi

# Si nous arrivons ici avec "all", v√©rifions si les tests unitaires ont √©chou√©
if [[ "$TEST_TYPE" == "all" && $UNIT_EXIT_CODE -ne 0 ]]; then
    echo -e "${RED}‚ùå Certains tests ont √©chou√©${NC}"
    exit $UNIT_EXIT_CODE
fi

echo -e "${GREEN}‚úÖ Tous les tests demand√©s ont r√©ussi !${NC}"
exit 0 