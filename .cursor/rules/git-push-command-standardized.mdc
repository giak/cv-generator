---
description: "ALWAYS use when MAKING commits or MANAGING git workflow to ENSURE consistent version control practices"
globs: "**/.git/*"
---
---
title: "Standards de Commit et Push Git"
version: "2.0.0"
description: "ALWAYS use when MAKING commits or MANAGING git workflow to ENSURE consistent version control practices"
globs: "**/.git/*"
alwaysApply: false
priority: 70
compatibility: ">=0.45"
lastUpdated: "2025-03-10"
tags: ["git", "version-control", "commit", "workflow"]
---

# üìä Standards de Commit et Push Git

## üìã Vue d'Ensemble
Cette r√®gle d√©finit les standards pour effectuer des commits et des pushs dans Git. Elle garantit des messages de commit coh√©rents, des proc√©dures de staging appropri√©es et une tra√ßabilit√© claire des modifications dans le r√©f√©rentiel de code.

> ‚ö†Ô∏è **Attention**: La qualit√© des messages de commit est essentielle pour la maintenance et la compr√©hension de l'historique du projet √† long terme.

## üéØ Objectifs
- Assurer la coh√©rence des messages de commit
- Faciliter la compr√©hension des changements
- Maintenir un historique de projet clair et d√©taill√©
- Garantir que tous les changements intentionnels sont inclus
- Fournir une documentation int√©gr√©e des modifications

## ‚úÖ Requirements

- Ex√©cuter la commande `git add .` depuis la racine de l'espace de travail
- V√©rifier toutes les modifications ajout√©es qui seront incluses dans le commit
- Cr√©er un message de commit sans caract√®res de nouvelle ligne
- Utiliser le format: `type(scope): brief description`
- Garder les titres brefs et descriptifs (max 72 caract√®res)
- Ajouter deux nouvelles lignes apr√®s le titre du commit sans caract√®res de nouvelle ligne
- Inclure un r√©sum√© des diff√©rences de toutes les modifications
- Ajouter des explications d√©taill√©es dans le corps du commit
- Terminer avec la signature "-bmadAi"
- Pousser tout vers le d√©p√¥t distant de la branche actuelle

## üìù Proc√©dure de Commit et Push

### 1Ô∏è‚É£ Pr√©paration des Changements
```bash
git add .
```

### 2Ô∏è‚É£ V√©rification des Changements Ajout√©s
```bash
git status
```

### 3Ô∏è‚É£ Cr√©ation du Message de Commit
Format du message:
```
type(scope): brief description

Changes made in this commit:
- Modified files: [liste des fichiers modifi√©s]
- Added files: [liste des fichiers ajout√©s]
- Deleted files: [liste des fichiers supprim√©s]
- Key changes:
  - [changement sp√©cifique 1]
  - [changement sp√©cifique 2]
  ...

Explication d√©taill√©e des changements et raisonnement...

-bmadAi
```

### 4Ô∏è‚É£ Commit des Changements
```bash
git commit -m "message format√© comme ci-dessus"
```

### 5Ô∏è‚É£ Push vers le D√©p√¥t Distant
```bash
git push origin [branche actuelle]
```

## üìã Types de Commit

| Type     | Description                                           |
|:---------|:------------------------------------------------------|
| feat     | Nouvelle fonctionnalit√©                               |
| fix      | Correction de bug                                     |
| docs     | Modification de la documentation                      |
| style    | Formatage, points-virgules manquants, etc.            |
| refactor | Refactorisation du code                               |
| test     | Ajout ou modification de tests                        |
| chore    | Changements de configuration, outils de build, etc.   |
| perf     | Am√©lioration des performances                         |

## üí° Exemples

<example>
**Bon message de commit**:

```
feat(auth): implement JWT-based authentication

Changes made in this commit:
- Modified files: src/auth/auth.service.ts, src/auth/auth.controller.ts
- Added files: src/auth/jwt.strategy.ts, src/auth/jwt.guard.ts
- Deleted files: src/auth/basic-auth.strategy.ts
- Key changes:
  - Added JWT token generation in auth service
  - Implemented token validation middleware
  - Created protected route decorators
  - Updated authentication tests

This commit replaces the basic authentication with a more secure JWT-based approach. The new implementation uses asymmetric key signing for enhanced security and supports token refresh. The authentication flow has been updated in all relevant controllers and services.

-bmadAi
```

Ce message de commit est bien format√© car il:
1. Utilise le format type(scope): description
2. Fournit un r√©sum√© clair des fichiers modifi√©s, ajout√©s et supprim√©s
3. D√©taille les changements sp√©cifiques
4. Explique le raisonnement derri√®re les modifications
5. Inclut la signature correcte
</example>

<example type="invalid">
**Message de commit probl√©matique**:

```
fixed stuff
```

Ce message de commit est probl√©matique car il:
1. Ne suit pas le format type(scope): description
2. Est trop vague et ne d√©crit pas les changements r√©els
3. Ne fournit pas de liste des fichiers modifi√©s
4. N'explique pas le raisonnement derri√®re les modifications
5. Ne contient pas les d√©tails des changements sp√©cifiques
6. N'inclut pas la signature requise
</example>

## ‚ö†Ô∏è Points Critiques

<critical>
- NE JAMAIS utiliser de messages de commit vagues ou trop g√©n√©riques
- TOUJOURS v√©rifier les changements inclus avant de les committer
- MAINTENIR la structure du message de commit comme d√©finie
- INCLURE la liste des fichiers modifi√©s, ajout√©s et supprim√©s
- TERMINER chaque commit avec la signature "-bmadAi"
</critical>

## ‚úÖ Bonnes Pratiques

- **Atomicit√©**: Chaque commit doit repr√©senter un changement logique unique
- **Clart√©**: Les messages doivent clairement indiquer ce qui a chang√© et pourquoi
- **V√©rification**: Toujours v√©rifier les changements avant de committer
- **R√©gularit√©**: Committer r√©guli√®rement pour √©viter les commits trop volumineux
- **Historique**: Pr√©server l'historique en √©vitant de r√©√©crire les commits publi√©s
- **Branche**: Travailler sur des branches d√©di√©es pour les nouvelles fonctionnalit√©s
- **Descriptif**: Le message de commit doit r√©pondre √† "quoi" et "pourquoi", pas "comment"

## üîó R√©f√©rences
- [Conventional Commits](mdc:https:/www.conventionalcommits.org)
- [Git Best Practices](mdc:https:/git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project)
- [Workflow Agile](mdc:xnotes/workflow-agile-standardized.md)

<version>2.0.0</version> 