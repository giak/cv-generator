---
description: "ALWAYS use when  la story  or UPDATING story files to ENSURE proper tracking and implementation. This rule enforces consistent story structure with tasks, context, and progress tracking."
globs: "**/*.story.md"
alwaysApply: false
---

# üìù R√®gles des User Stories

## üìã Vue d'Ensemble
Cette r√®gle d√©finit les standards pour la cr√©ation et la mise √† jour des user stories. Elle assure que toutes les stories suivent une structure coh√©rente, facilitant leur compr√©hension, leur impl√©mentation et leur suivi tout au long du cycle de d√©veloppement agile.

> ‚ö†Ô∏è **Attention**: Les user stories sont des artefacts essentiels du processus agile et doivent √™tre maintenues √† jour tout au long du d√©veloppement.

## üéØ Objectifs
- Assurer une documentation coh√©rente des besoins utilisateurs
- Garantir que toutes les sections essentielles sont incluses
- Faciliter la planification et le suivi des t√¢ches
- Maintenir une trace historique des d√©cisions et communications
- Permettre une estimation pr√©cise des efforts requis

## ‚úÖ Requirements

- Suivre la structure standardis√©e des stories
- Inclure toutes les sections requises d√©taill√©es ci-dessous
- Organiser les stories dans les r√©pertoires d'Epics appropri√©s
- Suivre l'avancement des t√¢ches avec pr√©cision
- Maintenir l'historique d'impl√©mentation
- Formuler les crit√®res d'acceptation dans le format "√âtant donn√©/Quand/Alors"

## üìÅ Structure de Fichiers

Les stories doivent √™tre plac√©es dans le r√©pertoire de leur Epic:
`.ai/epic-{n}/story-{m}.story.md`

## üìù Structure des Stories

### 1Ô∏è‚É£ M√©ta-information
Format obligatoire:
```
Epic-{N}: {Titre de l'Epic}
Story-{M}: {Titre de la Story}
```

### 2Ô∏è‚É£ Description de la Story
Format obligatoire:
```
**En tant que** {r√¥le}
**Je veux** {action}
**afin de** {b√©n√©fice}
```

### 3Ô∏è‚É£ Statut
L'un des statuts suivants:
- Draft
- In Progress
- Complete
- Cancelled

### 4Ô∏è‚É£ Contexte
Description d√©taill√©e incluant:
- Relation avec l'epic parent
- D√©pendances avec d'autres stories
- Contraintes sp√©cifiques
- Hypoth√®ses

### 5Ô∏è‚É£ Estimation
Format obligatoire:
```
Story Points: {nombre}
```

### 6Ô∏è‚É£ Crit√®res d'Acceptation
Liste num√©rot√©e utilisant le format:
```
1. √âtant donn√© {contexte}, quand {action}, alors {r√©sultat attendu}
2. √âtant donn√© {contexte}, quand {action}, alors {r√©sultat attendu}
...
```

### 7Ô∏è‚É£ T√¢ches
Liste hi√©rarchique avec suivi de progression:
```
1. - [ ] {T√¢che principale 1}
   1. - [ ] {Sous-t√¢che 1.1}
   2. - [ ] {Sous-t√¢che 1.2}
2. - [ ] {T√¢che principale 2}
   ...
```

### 8Ô∏è‚É£ Principes de D√©veloppement
Cette section rappelle les principes √† suivre lors de l'impl√©mentation du code:

```
#### Principes √† Suivre
- **Simplicit√©**: Solution minimale r√©pondant aux crit√®res d'acceptation (focus sur un plateau fonctionnel sans fonctionnalit√©s avanc√©es)
- **P√©rim√®tre**: Se limiter strictement aux exigences document√©es (ne pas impl√©menter les r√®gles de jeu compl√®tes)
- **Coh√©rence**: Respecter l'architecture React du projet et les patterns existants

#### √Ä √âviter
- G√©n√©ration de code pour des fonctionnalit√©s avanc√©es (comme l'IA des √©checs)
- Cr√©ation de fichiers suppl√©mentaires pour des variantes du jeu
- Impl√©mentation du d√©placement des pi√®ces non couvert par les crit√®res d'acceptation
```

### 9Ô∏è‚É£ Risques et Hypoth√®ses
Format obligatoire (tableau):

## üí° Exemples

<example>
**Exemple de bonne Story**:

```markdown
# Story: Interface Utilisateur du Plateau d'√âchecs

Epic-2: Jeu d'√âchecs en Ligne
Story-3: Interface du Plateau d'√âchecs

## Description de la Story

**En tant que** joueur d'√©checs
**Je veux** visualiser clairement le plateau d'√©checs avec les pi√®ces
**afin de** pouvoir planifier et ex√©cuter mes mouvements efficacement

## Statut

In Progress

## Contexte

Cette story fait partie de l'Epic-2 qui impl√©mente le jeu d'√©checs complet. Elle se concentre sur les aspects visuels et interactifs du plateau d'√©checs. La mise en place du projet (Story-1) est termin√©e, fournissant la base pour l'impl√©mentation de l'interface utilisateur.

## Estimation

Story Points: 2

## Crit√®res d'Acceptation

1. √âtant donn√© que l'application est charg√©e, quand un utilisateur ouvre la page principale, alors un plateau d'√©checs 8x8 est affich√© avec l'alternance correcte de cases blanches et noires
2. √âtant donn√© un plateau d'√©checs, quand l'application d√©marre, alors toutes les pi√®ces sont plac√©es dans leurs positions initiales correctes
3. √âtant donn√© un plateau avec des pi√®ces, quand un utilisateur clique sur une pi√®ce, alors la case est mise en surbrillance pour indiquer la s√©lection
4. √âtant donn√© une pi√®ce s√©lectionn√©e, quand un utilisateur clique sur une case valide, alors la pi√®ce se d√©place vers cette case

## T√¢ches

1. - [x] Cr√©er la Grille du Plateau
   1. - [x] Impl√©menter la disposition 8x8
   2. - [x] Ajouter la coloration des cases
   3. - [x] √âcrire les tests de la grille
2. - [ ] Ajouter les Pi√®ces d'√âchecs
   1. - [ ] Cr√©er les composants de pi√®ces
   2. - [ ] Ajouter les images des pi√®ces
   3. - [ ] √âcrire les tests des pi√®ces
3. - [ ] Impl√©menter l'Interaction de Base
   1. - [ ] Ajouter les gestionnaires de clics
   2. - [ ] Mettre en surbrillance la case s√©lectionn√©e
   3. - [ ] √âcrire les tests d'interaction

## Principes de D√©veloppement

#### Principes √† Suivre
- **Simplicit√©**: Solution minimale r√©pondant aux crit√®res d'acceptation (focus sur un plateau fonctionnel sans fonctionnalit√©s avanc√©es)
- **P√©rim√®tre**: Se limiter strictement aux exigences document√©es (ne pas impl√©menter les r√®gles de jeu compl√®tes)
- **Coh√©rence**: Respecter l'architecture React du projet et les patterns existants

#### √Ä √âviter
- G√©n√©ration de code pour des fonctionnalit√©s avanc√©es (comme l'IA des √©checs)
- Cr√©ation de fichiers suppl√©mentaires pour des variantes du jeu
- Impl√©mentation du d√©placement des pi√®ces non couvert par les crit√®res d'acceptation

## Notes de D√©veloppement

- Utilisation de React pour les composants UI
- SVGs des pi√®ces d'√©checs provenant d'une biblioth√®que open-source
- Impl√©mentation d'un design responsive pour diff√©rentes tailles d'√©cran

## Journal de Communication

- BMad: Impl√©mentons l'interface du plateau d'√©checs
- AiAgent: Je v√©rifie les exigences de design. Devrions-nous utiliser SVG ou PNG pour les pi√®ces?
  - BMad: Utilisons SVG pour une meilleure mise √† l'√©chelle
- AiAgent: Impl√©mentation de la grille termin√©e, je proc√®de au placement des pi√®ces
```

Cette story suit parfaitement la structure requise, avec une description claire, des crit√®res d'acceptation bien format√©s, et un suivi pr√©cis des t√¢ches.
</example>

<example type="invalid">
**Exemple √† √©viter**:

```markdown
Story Plateau d'√âchecs

√Ä faire:

- cr√©er plateau
- ajouter pi√®ces
- le faire fonctionner
```

Cette "story" manque de presque tous les √©l√©ments requis:
- Pas de m√©ta-information (Epic/Story)
- Pas de format "En tant que/Je veux/afin de"
- Pas de statut
- Pas de contexte
- Pas d'estimation
- Pas de crit√®res d'acceptation
- T√¢ches trop vagues sans hi√©rarchie ni suivi
- Pas de notes de d√©veloppement ni de journal de communication
</example>

## ‚úÖ Bonnes Pratiques

- **Clart√©**: Utilisez un langage pr√©cis dans la description de la story
- **Atomicit√©**: Chaque story doit √™tre suffisamment petite pour √™tre compl√©t√©e dans un sprint
- **Ind√©pendance**: Minimisez les d√©pendances entre stories
- **Estimations**: Basez les points de story sur la complexit√©, pas sur le temps
- **T√¢ches**: D√©composez en t√¢ches techniques concr√®tes et v√©rifiables
- **Progression**: Mettez √† jour r√©guli√®rement l'√©tat des t√¢ches
- **Communication**: Documentez les d√©cisions importantes dans le journal
- **Crit√®res d'Acceptation**: Formulez-les dans un format "√©tant donn√©/quand/alors"

## üîó R√©f√©rences
- [Template de Story](mdc:xnotes/template-story-standardized.md)
- [Guide de l'Estimation Agile](mdc:https:/www.mountaingoatsoftware.com/blog/what-are-story-points)
- [Technique INVEST pour les User Stories](mdc:https:/www.agilealliance.org/glossary/invest)

<version>2.0.0</version> 